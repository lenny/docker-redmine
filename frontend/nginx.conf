
# originally based on:
# https://github.com/gilles/chef-boilerplate/blob/master/cookbooks/application/templates/default/unicorn_nginx_site.erb

upstream app_servers {
  # fail_timeout=0 means we always retry an upstream even if it failed
  # to return a good HTTP response (in case the Unicorn master nukes a
  # single worker for timing out).

  server APPSERVER_PORT_3000_TCP_ADDR:APPSERVER_PORT_3000_TCP_PORT fail_timeout=0;
}

server {
  listen 80 default_server;
  listen [::]:80 default_server;

  listen  443 ssl;
 
  server_name redmine.lennymarks.com;

  ssl_certificate /etc/nginx/certs/redmine.pem;
  ssl_certificate_key /etc/nginx/certs/redmine.key;
 
  root APPSERVER_ENV_REDMINE_DIR/public;

  if ($http_user_agent ~* (Baiduspider|Jullo) ) {
    return 444;
  }

  ## Deny certain Referers (case insensitive)
  ## The ~* makes it case insensitive as opposed to just a ~
  if ($http_referer ~* (babes|click|diamond|forsale|girl|jewelry|love|nudit|organic|poker|porn|poweroversoftware|sex|teen|video|webcam|zippo) ) {
    return 444;
  }

  if (-f $document_root/system/maintenance.html) {
    return 503;
  }

  error_page 503 @503;
  location @503 {
    rewrite ^(.*)$ /system/maintenance.html break;
  }

  location ~* \.(png|gif|jpg|jpeg|css|js|swf|ico)(\?[0-9]+)?$ {
    #extension can be used in dynamic pages as well (format / beacon)
    #make sure it is passed to the backend if the file does not exists
    if (-f $document_root$uri) {
      access_log off;
      expires max;
      add_header Cache-Control public;
    }
    try_files $uri @proxy;
  }

  # Try to serve static files from nginx, no point in making an
  # *application* server like Unicorn/Rainbows! serve static files.
  location / {
    try_files $uri @proxy;
  }

  location @proxy {

    # an HTTP header important enough to have its own Wikipedia entry:
    #  http://en.wikipedia.org/wiki/X-Forwarded-For
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;

    # enable this if and only if you use HTTPS, this helps Rack
    # set the proper protocol for doing redirects:
    proxy_set_header X-Forwarded-Proto $scheme;

    # pass the Host: header from the client right along so redirects
    # can be set properly within the Rack application
    proxy_set_header Host $http_host;

    # we don't want nginx trying to do something clever with
    # redirects, we set the Host: header above already.
    proxy_redirect off;

    # set "proxy_buffering off" *only* for Rainbows! when doing
    # Comet/long-poll stuff.  It's also safe to set if you're
    # using only serving fast clients with Unicorn + nginx.
    # Otherwise you _want_ nginx to buffer responses to slow
    # clients, really.
    # proxy_buffering off;

    proxy_pass http://app_servers;
   }
}
